name: Test

on:
  pull_request:
    branches: [master]

jobs:
  scope:
    name: Prepare matrix for testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      spiders: ${{ steps.scope.outputs.spiders }}
    steps:
      - uses: actions/checkout@v3
      - name: Find test scope
        id: scope
        run: |
          echo "Git branch ${GITHUB_HEAD_REF}"
          branchName=${GITHUB_HEAD_REF#refs/heads/}
          spiderName=${branchName%%/*}
          allSpiders=$(cat SPIDERS | jq -R -s -c 'split("\n")')
          isSpiderBranch=$(echo $allSpiders | jq --arg spiderName "$spiderName" 'index($spiderName)')
          if [ "$isSpiderBranch" = "null" ]; then
            echo "Building test matrix for all spiders: $allSpiders"
            spiders=$(echo "$allSpiders" | jq '.+ ["not spider"]' | tr -d '\n')
          else
            echo "Building test matrix only for spider \"$spiderName\""
            spiders="[\"$spiderName\", \"not spider\"]"
          fi
          echo "Spider matrix: $spiders"
          echo "::set-output name=spiders::"$spiders""

  lint:
    name: Lint with flake8
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 .

  test:
    name: Test
    needs: [scope]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        spider: ${{ fromJson(needs.scope.outputs.spiders) }}
    env:
      SPIDER: ${{ matrix.spider }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Setup Xvfb for headed Chrome
        if: contains(fromJson('["oikotieapartment"]'), matrix.spider)
        run: |
          Xvfb :99 &
      - name: Test with pytest
        env:
          DISPLAY: :99
        run: |
          python -m pytest -vv -m "$SPIDER"
