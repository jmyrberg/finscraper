name: Spiders

on:
  schedule:
    - cron: '0 6 * * *'

jobs:
  scope:
    name: Prepare matrix for testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      spiders: ${{ steps.scope.outputs.spiders }}
    steps:
      - uses: actions/checkout@v3
      - name: Find spider matrix
        id: scope
        run: |
          allSpiders=$(cat SPIDERS | jq -R -s -c 'split("\n")' | tr -d '\n')
          echo "::set-output name=spiders::$allSpiders"

  test:
    name: Test
    needs: [scope]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        spider: ${{ fromJson(needs.scope.outputs.spiders) }}
    env:
      SPIDER: ${{ matrix.spider }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Setup Xvfb for headed Chrome
        if: contains(fromJson('["oikotieapartment"]'), matrix.spider)
        run: |
          Xvfb :99 &
      - name: Test with pytest
        env:
          DISPLAY: :99
        run: |
          python -m pytest -vv -m "$SPIDER"
